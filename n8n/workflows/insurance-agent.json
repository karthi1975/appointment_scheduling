{
  "name": "Insurance Agent",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "missing-dob",
              "leftValue": "={{ $json.state.insurance?.dob || null }}",
              "rightValue": null,
              "operator": {
                "type": "any",
                "operation": "isNull"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-missing-dob",
      "name": "Check if Missing DOB",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [240, 300]
    },
    {
      "parameters": {
        "jsCode": "return [{ action: 'ask', question: 'What is your date of birth?' }];"
      },
      "id": "ask-for-dob",
      "name": "Ask for Date of Birth",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 200]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "nodeCredentialType": "httpHeaderAuth",
        "method": "POST",
        "url": "={{ $env.INSURANCE_API_ENDPOINT }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "payer",
              "value": "={{ $json.state.insurance.payer }}"
            },
            {
              "name": "memberId",
              "value": "={{ $json.state.insurance.memberId }}"
            },
            {
              "name": "dob",
              "value": "={{ $json.state.insurance.dob }}"
            }
          ]
        }
      },
      "id": "verify-insurance",
      "name": "Verify Insurance Eligibility",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [460, 400]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "insurance-eligible",
              "leftValue": "={{ $json.statusCode }}",
              "rightValue": 200,
              "operator": {
                "type": "number",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "check-eligibility",
      "name": "Check Eligibility Status",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [680, 400]
    },
    {
      "parameters": {
        "jsCode": "return [{ insurance: { eligible: true, copay_estimate: 35, plan: 'PPO 2500' } }];"
      },
      "id": "format-eligible",
      "name": "Format Eligible Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "jsCode": "return [{ action: 'ask', question: 'I couldn\\'t verify your plan. Can you confirm your member ID?' }];"
      },
      "id": "ask-for-member-id",
      "name": "Ask for Member ID Confirmation",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 500]
    }
  ],
  "connections": {
    "Check if Missing DOB": {
      "main": [
        [
          {
            "node": "Ask for Date of Birth",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Verify Insurance Eligibility",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Verify Insurance Eligibility": {
      "main": [
        [
          {
            "node": "Check Eligibility Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Eligibility Status": {
      "main": [
        [
          {
            "node": "Format Eligible Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Ask for Member ID Confirmation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "1"
} 